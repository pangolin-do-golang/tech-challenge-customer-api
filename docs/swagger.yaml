basePath: /
definitions:
  controller.CustomerPayload:
    properties:
      age:
        maximum: 120
        minimum: 18
        type: integer
      cpf:
        type: string
      email:
        type: string
      name:
        maxLength: 20
        minLength: 5
        type: string
    required:
    - cpf
    - email
    - name
    type: object
  customer.Customer:
    properties:
      age:
        type: integer
      cpf:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Fast Food API for FIAP Tech course
  title: Tech Challenge Customer Food API
  version: 0.1.0
paths:
  /customer:
    get:
      consumes:
      - application/json
      description: Overview all customer's list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/customer.Customer'
            type: array
      summary: Overview customer list
      tags:
      - Customer
    post:
      consumes:
      - application/json
      description: Create a new customer
      parameters:
      - description: CustomerPayload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controller.CustomerPayload'
      produces:
      - application/json
      responses:
        "200":
          description: customer.Customer
          schema:
            $ref: '#/definitions/customer.Customer'
        "400":
          description: '{\"error\": \"Invalid CPF\"}'
          schema:
            additionalProperties: true
            type: object
      summary: Create customer
      tags:
      - Customer
  /customer/{cpf}:
    get:
      consumes:
      - application/json
      description: Overview a customer by cpf
      parameters:
      - description: customer cpf
        in: path
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
        "404":
          description: Customer not found
      summary: Overview customer by cpf
      tags:
      - Customer
  /customer/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a customer by id
      parameters:
      - description: "123456789"
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Invalid identifier informed
      summary: Delete customer
      tags:
      - Customer
    put:
      consumes:
      - application/json
      description: Update a customer by id
      parameters:
      - description: ID of the customer
        in: path
        name: id
        required: true
        type: string
      - description: CustomerPayload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/controller.CustomerPayload'
      produces:
      - application/json
      responses:
        "200":
          description: customer.Customer
          schema:
            $ref: '#/definitions/customer.Customer'
        "400":
          description: '{\"error\": \"Invalid CPF\"}'
          schema:
            additionalProperties: true
            type: object
      summary: Update customer
      tags:
      - Customer
swagger: "2.0"
